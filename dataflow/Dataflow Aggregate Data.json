{
	"name": "Dataflow Aggregate Data",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "transactiondata2021",
						"type": "DatasetReference"
					},
					"name": "tablesqldbnycpayrolldata2021"
				},
				{
					"dataset": {
						"referenceName": "nycpayroll_2020",
						"type": "DatasetReference"
					},
					"name": "dlnycpayroll2020"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "NYC_Payroll_Summary",
						"type": "DatasetReference"
					},
					"name": "sinkAggregationToSynapseDB"
				}
			],
			"transformations": [
				{
					"name": "CombineBothYears"
				},
				{
					"name": "FilterFiscalYear"
				},
				{
					"name": "CreateTotalPaidColumn"
				},
				{
					"name": "AggregateTotalPaidbyFiscalYearAndAgencyName"
				}
			],
			"scriptLines": [
				"parameters{",
				"     FiscalYear as integer (2021)",
				"}",
				"source(output(",
				"          FiscalYear as integer,",
				"          PayrollNumber as integer,",
				"          AgencyID as string,",
				"          AgencyName as string,",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string,",
				"          AgencyStartDate as date,",
				"          WorkLocationBorough as string,",
				"          TitleCode as string,",
				"          TitleDescription as string,",
				"          LeaveStatusasofJune30 as string,",
				"          BaseSalary as double,",
				"          PayBasis as string,",
				"          RegularHours as double,",
				"          RegularGrossPaid as double,",
				"          OTHours as double,",
				"          TotalOTPaid as double,",
				"          TotalOtherPay as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> tablesqldbnycpayrolldata2021",
				"source(output(",
				"          FiscalYear as integer,",
				"          PayrollNumber as integer,",
				"          AgencyID as string,",
				"          AgencyName as string,",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string,",
				"          AgencyStartDate as date,",
				"          WorkLocationBorough as string,",
				"          TitleCode as string,",
				"          TitleDescription as string,",
				"          LeaveStatusasofJune30 as string,",
				"          BaseSalary as double,",
				"          PayBasis as string,",
				"          RegularHours as double,",
				"          RegularGrossPaid as double,",
				"          OTHours as double,",
				"          TotalOTPaid as double,",
				"          TotalOtherPay as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> dlnycpayroll2020",
				"tablesqldbnycpayrolldata2021, dlnycpayroll2020 union(byName: true)~> CombineBothYears",
				"CombineBothYears filter(toInteger(FiscalYear) >= $FiscalYear) ~> FilterFiscalYear",
				"FilterFiscalYear derive(TotalPaid = RegularGrossPaid+TotalOTPaid+TotalOtherPay) ~> CreateTotalPaidColumn",
				"CreateTotalPaidColumn aggregate(groupBy(FiscalYear,",
				"          AgencyName),",
				"     TotalPaid = sum(TotalPaid)) ~> AggregateTotalPaidbyFiscalYearAndAgencyName",
				"AggregateTotalPaidbyFiscalYearAndAgencyName sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          FiscalYear as integer,",
				"          AgencyName as string,",
				"          TotalPaid as double",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sinkAggregationToSynapseDB"
			]
		}
	}
}